<!DOCTYPE composition PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
   "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
   xmlns:ui="http://java.sun.com/jsf/facelets"
   xmlns:f="http://java.sun.com/jsf/core"
   xmlns:h="http://java.sun.com/jsf/html"
   xmlns:c="http://java.sun.com/jsp/jstl/core"
   xmlns:comp="http://java.sun.com/jsf/composite">

   <comp:interface>
      <comp:attribute name="label" required="true"/>
      <comp:attribute name="required" required="false"/>
   </comp:interface>

   <ui:remove>
   TODO allow for a template to be specified, falling back to a default
   TODO detect required from child or from bean validation annotation
   Ed claims there is #{component.messageList}, but I don't see it
   </ui:remove>

   <comp:implementation>

      <c:set var="required" value="#{cc.attrs.required eq null ? true : cc.attrs.required}"/>
      <c:set var="invalid" value="#{not empty facesContext.getMessageList(cc.clientId.concat(':input'))}"/>
      <c:set var="invalid2" value="#{not empty facesContext.getMessageList(cc.clientId.concat(':input2'))}"/>

      <div class="entry">
         <h:outputLabel value="#{cc.attrs.label}:" for="input" styleClass="label#{invalid || invalid2 ? ' errors' : ''}">
            <c:if test="#{required}"><span class="required">*</span></c:if>
         </h:outputLabel>
         <span class="input#{invalid || invalid2 ? ' errors' : ''}">
            <comp:insertChildren/>
         </span>
         <h:message for="input" styleClass="error errors" rendered="#{invalid}"/>
         <h:message for="input2" styleClass="error errors" rendered="#{invalid2}"/>
      </div>

   </comp:implementation>


</ui:composition>
